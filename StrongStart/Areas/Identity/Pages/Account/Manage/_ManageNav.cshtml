@using StrongStart.Data;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    Boolean isAdmin = User.IsInRole("Admin");
    Boolean isVolunteer = User.IsInRole("Volunteer");
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
    <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a></li>


    @if (isVolunteer)
    {
        <li class="nav-item"><a class="nav-link @ManageNavPages.YourTrainingClass(ViewContext)" id="your-training" asp-page="./YourTraining">Your Trainings</a></li>
    }
    else if (isAdmin)
    {
        <li class="nav-item"><a class="nav-link @ManageNavPages.YourVolunteerClass(ViewContext)" id="your-volunteer" asp-page="./YourVolunteer">Volunteers</a></li>
    }

</ul>
