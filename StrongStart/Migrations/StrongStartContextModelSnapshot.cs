// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StrongStart.Models;

namespace StrongStart.Migrations
{
    [DbContext(typeof(StrongStartContext))]
    partial class StrongStartContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StrongStart.Models.Region", b =>
                {
                    b.Property<int>("regionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("regionCode");

                    b.Property<string>("regionName");

                    b.HasKey("regionID");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            regionID = 1,
                            regionCode = "WR",
                            regionName = "Waterloo Region"
                        },
                        new
                        {
                            regionID = 2,
                            regionCode = "WL",
                            regionName = "Wellington Region"
                        },
                        new
                        {
                            regionID = 3,
                            regionCode = "PR",
                            regionName = "Perth Region"
                        });
                });

            modelBuilder.Entity("StrongStart.Models.Site", b =>
                {
                    b.Property<int>("siteID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Phone");

                    b.Property<string>("PostalCode");

                    b.Property<string>("Province");

                    b.Property<double>("geoLat");

                    b.Property<double>("geoLng");

                    b.Property<int>("regionID");

                    b.Property<string>("siteName");

                    b.HasKey("siteID");

                    b.HasIndex("regionID");

                    b.ToTable("Sites");

                    b.HasData(
                        new
                        {
                            siteID = 1,
                            Address = "406 Paisley Rd",
                            City = "Guelph",
                            Phone = "5198220675",
                            PostalCode = "N1H 2R3",
                            Province = "ON",
                            geoLat = 0.0,
                            geoLng = 0.0,
                            regionID = 2,
                            siteName = "Paisley Road Public School"
                        },
                        new
                        {
                            siteID = 2,
                            Address = "299 Doon Valley",
                            City = "Kitchener",
                            Phone = "987456213",
                            PostalCode = "N2G 4M4",
                            Province = "ON",
                            geoLat = 0.0,
                            geoLng = 0.0,
                            regionID = 1,
                            siteName = "Conestoga College"
                        },
                        new
                        {
                            siteID = 3,
                            Address = "905 Scotland St",
                            City = "Fergus",
                            Phone = "519843-2500",
                            PostalCode = "N1M 1Y7",
                            Province = "ON",
                            geoLat = 0.0,
                            geoLng = 0.0,
                            regionID = 2,
                            siteName = "Centre Wellington District High School"
                        },
                        new
                        {
                            siteID = 4,
                            Address = "60 St Andrew St",
                            City = "Stratford",
                            Phone = "5192714500",
                            PostalCode = "N5A 1A3",
                            Province = "ON",
                            geoLat = 0.0,
                            geoLng = 0.0,
                            regionID = 3,
                            siteName = "Stratford Central Secondary School"
                        });
                });

            modelBuilder.Entity("StrongStart.Models.Term", b =>
                {
                    b.Property<int>("termID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("termName");

                    b.HasKey("termID");

                    b.ToTable("Terms");

                    b.HasData(
                        new
                        {
                            termID = 1,
                            termName = "F2019"
                        },
                        new
                        {
                            termID = 2,
                            termName = "S2019"
                        },
                        new
                        {
                            termID = 3,
                            termName = "F2020"
                        });
                });

            modelBuilder.Entity("StrongStart.Models.Trainer", b =>
                {
                    b.Property<int>("trainerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Email");

                    b.Property<string>("Phone");

                    b.Property<string>("Province");

                    b.Property<int>("Title");

                    b.Property<string>("firstName");

                    b.Property<string>("lastName");

                    b.Property<int>("regionID");

                    b.HasKey("trainerID");

                    b.HasIndex("regionID");

                    b.ToTable("Trainers");

                    b.HasData(
                        new
                        {
                            trainerID = 1,
                            Address = "5 Rittenhouse Rd",
                            City = "Waterloo",
                            Country = "Canada",
                            Email = "wangqiao921105@gmail.com",
                            Phone = "123456789",
                            Province = "ON",
                            Title = 0,
                            firstName = "qiao",
                            lastName = "wang",
                            regionID = 1
                        },
                        new
                        {
                            trainerID = 2,
                            Address = "10 Rittenhouse Rd",
                            City = "Guelph",
                            Country = "Canada",
                            Email = "1@1.com",
                            Phone = "123456789",
                            Province = "ON",
                            Title = 1,
                            firstName = "mao",
                            lastName = "qiu",
                            regionID = 2
                        });
                });

            modelBuilder.Entity("StrongStart.Models.Training", b =>
                {
                    b.Property<int>("trainingID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity");

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("endTime");

                    b.Property<int?>("linkID");

                    b.Property<int>("part");

                    b.Property<int>("permit");

                    b.Property<int>("siteID");

                    b.Property<string>("specInstructions");

                    b.Property<DateTime>("startTime");

                    b.Property<int>("termID");

                    b.Property<string>("trainingName");

                    b.Property<int>("training_Progress_Status");

                    b.Property<int>("training_Status");

                    b.HasKey("trainingID");

                    b.HasIndex("siteID");

                    b.HasIndex("termID");

                    b.ToTable("Trainings");

                    b.HasData(
                        new
                        {
                            trainingID = 1,
                            Capacity = 30,
                            Date = new DateTime(2019, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            endTime = new DateTime(2019, 10, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            part = 0,
                            permit = 1,
                            siteID = 2,
                            startTime = new DateTime(2019, 10, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            termID = 1,
                            training_Progress_Status = 0,
                            training_Status = 0
                        },
                        new
                        {
                            trainingID = 2,
                            Capacity = 40,
                            Date = new DateTime(2019, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            endTime = new DateTime(2019, 10, 12, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            part = 1,
                            permit = 1,
                            siteID = 1,
                            startTime = new DateTime(2019, 10, 12, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            termID = 2,
                            training_Progress_Status = 1,
                            training_Status = 0
                        },
                        new
                        {
                            trainingID = 3,
                            Capacity = 20,
                            Date = new DateTime(2019, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            endTime = new DateTime(2019, 10, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            part = 0,
                            permit = 1,
                            siteID = 3,
                            startTime = new DateTime(2019, 10, 20, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            termID = 2,
                            training_Progress_Status = 2,
                            training_Status = 1
                        },
                        new
                        {
                            trainingID = 4,
                            Capacity = 10,
                            Date = new DateTime(2019, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            endTime = new DateTime(2019, 10, 27, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            part = 1,
                            permit = 1,
                            siteID = 4,
                            startTime = new DateTime(2019, 10, 27, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            termID = 1,
                            training_Progress_Status = 2,
                            training_Status = 0
                        },
                        new
                        {
                            trainingID = 5,
                            Capacity = 15,
                            Date = new DateTime(2019, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            endTime = new DateTime(2019, 10, 11, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            part = 1,
                            permit = 1,
                            siteID = 3,
                            startTime = new DateTime(2019, 10, 11, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            termID = 1,
                            training_Progress_Status = 3,
                            training_Status = 0
                        });
                });

            modelBuilder.Entity("StrongStart.Models.Training_Trainer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("becomeTrainer");

                    b.Property<string>("driveDistance");

                    b.Property<int>("hasKit");

                    b.Property<int>("traineeStatus");

                    b.Property<int>("trainerID");

                    b.Property<int>("trainingID");

                    b.HasKey("ID");

                    b.HasIndex("trainerID");

                    b.HasIndex("trainingID");

                    b.ToTable("Training_Trainers");
                });

            modelBuilder.Entity("StrongStart.Models.Training_Volunteer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("trainingID");

                    b.Property<string>("volunteerID");

                    b.HasKey("ID");

                    b.HasIndex("trainingID");

                    b.ToTable("Training_Volunteers");
                });

            modelBuilder.Entity("StrongStart.Models.Volunteer", b =>
                {
                    b.Property<int>("volunteerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Email");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PasswordSalt");

                    b.Property<string>("Phone");

                    b.Property<string>("Province");

                    b.Property<string>("firstName");

                    b.Property<int>("infoID");

                    b.Property<string>("lastName");

                    b.Property<int>("prefSchool");

                    b.Property<int?>("siteID");

                    b.HasKey("volunteerID");

                    b.HasIndex("siteID");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("StrongStart.Models.Site", b =>
                {
                    b.HasOne("StrongStart.Models.Region", "region")
                        .WithMany("Sites")
                        .HasForeignKey("regionID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("StrongStart.Models.Trainer", b =>
                {
                    b.HasOne("StrongStart.Models.Region", "region")
                        .WithMany("Trainers")
                        .HasForeignKey("regionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StrongStart.Models.Training", b =>
                {
                    b.HasOne("StrongStart.Models.Site", "site")
                        .WithMany("Trainings")
                        .HasForeignKey("siteID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StrongStart.Models.Term", "term")
                        .WithMany("Trainings")
                        .HasForeignKey("termID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("StrongStart.Models.Training_Trainer", b =>
                {
                    b.HasOne("StrongStart.Models.Trainer", "trainer")
                        .WithMany("Training_Trainers")
                        .HasForeignKey("trainerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StrongStart.Models.Training", "training")
                        .WithMany("Training_Trainers")
                        .HasForeignKey("trainingID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StrongStart.Models.Training_Volunteer", b =>
                {
                    b.HasOne("StrongStart.Models.Training", "training")
                        .WithMany("Training_Volunteers")
                        .HasForeignKey("trainingID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StrongStart.Models.Volunteer", b =>
                {
                    b.HasOne("StrongStart.Models.Site", "Site")
                        .WithMany("Volunteers")
                        .HasForeignKey("siteID");
                });
#pragma warning restore 612, 618
        }
    }
}
